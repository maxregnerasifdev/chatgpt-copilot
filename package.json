{
  "name": "chatgpt-copilot",
  "publisher": "feiskyer",
  "displayName": "ChatGPT Copilot",
  "icon": "images/ai-logo.png",
  "description": "An VS Code ChatGPT Copilot Extension",
  "version": "4.4.1",
  "aiKey": "",
  "repository": {
    "url": "https://github.com/feiskyer/chatgpt-copilot"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Testing",
    "Data Science",
    "Formatters",
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "chatgpt",
    "lamda",
    "bard",
    "gpt",
    "gpt3",
    "gpt3.5",
    "gpt4",
    "codex",
    "openai",
    "testing",
    "find bugs",
    "copilot",
    "ai"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "editor/context": [
        {
          "command": "chatgpt-copilot.generateCode",
          "group": "chatGpt@1",
          "when": "editorHasSelection && generateCode-enabled"
        },
        {
          "command": "chatgpt-copilot.addTests",
          "group": "chatGpt@2",
          "when": "editorHasSelection && addTests-enabled"
        },
        {
          "command": "chatgpt-copilot.findProblems",
          "group": "chatGpt@3",
          "when": "editorHasSelection && findProblems-enabled"
        },
        {
          "command": "chatgpt-copilot.optimize",
          "group": "chatGpt@4",
          "when": "editorHasSelection && optimize-enabled"
        },
        {
          "command": "chatgpt-copilot.explain",
          "group": "chatGpt@5",
          "when": "editorHasSelection && explain-enabled"
        },
        {
          "command": "chatgpt-copilot.addComments",
          "group": "chatGpt@6",
          "when": "editorHasSelection && addComments-enabled"
        },
        {
          "command": "chatgpt-copilot.completeCode",
          "group": "chatGpt@7",
          "when": "editorHasSelection && completeCode-enabled"
        },
        {
          "command": "chatgpt-copilot.adhoc",
          "group": "chatGpt@8",
          "when": "editorHasSelection && adhoc-enabled"
        },
        {
          "command": "chatgpt-copilot.customPrompt1",
          "group": "chatGpt@9",
          "when": "editorHasSelection && customPrompt1-enabled"
        },
        {
          "command": "chatgpt-copilot.customPrompt2",
          "group": "chatGpt@10",
          "when": "editorHasSelection && customPrompt2-enabled"
        }
      ]
    },
    "keybindings": [
      {
        "command": "chatgpt-copilot.generateCode",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.addTests",
        "key": "ctrl+k ctrl+shift+1",
        "mac": "cmd+k cmd+shift+1",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.findProblems",
        "key": "ctrl+k ctrl+shift+2",
        "mac": "cmd+k cmd+shift+2",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.optimize",
        "key": "ctrl+k ctrl+shift+3",
        "mac": "cmd+k cmd+shift+3",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.explain",
        "key": "ctrl+k ctrl+shift+4",
        "mac": "cmd+k cmd+shift+4",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.addComments",
        "key": "ctrl+k ctrl+shift+5",
        "mac": "cmd+k cmd+shift+5",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.completeCode",
        "key": "ctrl+k ctrl+shift+6",
        "mac": "cmd+k cmd+shift+6",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.adhoc",
        "key": "ctrl+k ctrl+shift+7",
        "mac": "cmd+k cmd+shift+7",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.customPrompt1",
        "key": "ctrl+k ctrl+shift+8",
        "mac": "cmd+k cmd+shift+8",
        "when": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.customPrompt2",
        "key": "ctrl+k ctrl+shift+9",
        "mac": "cmd+k cmd+shift+9",
        "when": "editorHasSelection"
      }
    ],
    "commands": [
      {
        "command": "chatgpt-copilot.freeText",
        "title": "ChatGPT: Ask anything"
      },
      {
        "command": "chatgpt-copilot.clearSession",
        "title": "ChatGPT: Reset session"
      },
      {
        "command": "chatgpt-copilot.generateCode",
        "title": "ChatGPT-Codex: Generate code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.addTests",
        "title": "ChatGPT: Add tests",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.findProblems",
        "title": "ChatGPT: Find bugs",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.optimize",
        "title": "ChatGPT: Optimize",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.explain",
        "title": "ChatGPT: Explain",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.addComments",
        "title": "ChatGPT: Add comments",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.completeCode",
        "title": "ChatGPT: Complete code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.adhoc",
        "title": "ChatGPT: Ad-hoc",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.customPrompt1",
        "title": "ChatGPT: Custom prompt 1",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-copilot.customPrompt2",
        "title": "ChatGPT: Custom prompt 2",
        "enablement": "editorHasSelection"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "node ./out/test/runTest.js",
    "build": "rm -rfv ./out/ && tsc -p ./",
    "postinstall": "node ./out/postinstall.js",
    "start": "tsc-watch --onSuccess \"node ./out/extension.js\""
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.6",
    "@types/node": "^14.14.35",
    "@types/vscode": "^1.56.0",
    "@typescript-eslint/eslint-plugin": "^4.29.0",
    "@typescript-eslint/parser": "^4.29.0",
    "eslint": "^7.31.0",
    "glob": "^7.1.7",
    "mocha": "^9.1.3",
    "nyc": "^15.1.0",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5",
    "vscode-test": "^1.6.0",
    "tsc-watch": "^4.1.0"
  },
  "dependencies": {
    "fs-extra": "^10.0.0",
    "prerun-script": "^1.2.0",
    "vscode": "^1.5.0"
  },
  "browserslist": [
    "last 1 chrome version",
    "last 1 firefox version",
    "last 1 safari version"
  ]
}
